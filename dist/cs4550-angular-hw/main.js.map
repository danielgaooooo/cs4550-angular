{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-page/admin-page.component.css","webpack:///./src/app/admin-page/admin-page.component.html","webpack:///./src/app/admin-page/admin-page.component.ts","webpack:///./src/app/admin-section-list/admin-section-list.component.css","webpack:///./src/app/admin-section-list/admin-section-list.component.html","webpack:///./src/app/admin-section-list/admin-section-list.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/course.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>Course Grid ({{courses.length}})</h2>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-4\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li *ngFor=\\\"let course of courses\\\" class=\\\"list-group-item\\\">\\n          {{course.title}}\\n          <a routerLink=\\\"/admin/course/{{course.id}}/section\\\"\\n             class=\\\"btn btn-primary float-right\\\">Edit Sections</a>\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-8\\\">\\n      <app-admin-section-list></app-admin-section-list>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Course} from '../models/course.model.client';\nimport {CourseServiceClient} from '../services/course.service.client';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.css']\n})\nexport class AdminPageComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient) {\n  }\n\n  courses: Course[] = [];\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" [hidden]=\\\"!loaded\\\">\\n  <h1>Sections for course: {{courseId}}</h1>\\n  <input [(ngModel)]=\\\"sectionName\\\"\\n         placeholder=\\\"Section Name\\\"\\n         class=\\\"form-control\\\">\\n  <input [(ngModel)]=\\\"seats\\\"\\n         placeholder=\\\"Seats available\\\"\\n         class=\\\"form-control\\\">\\n  <button (click)=\\\"createSection(sectionName, seats)\\\" class=\\\"btn btn-success btn-block\\\">\\n    Add Section\\n  </button>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      <div [hidden]=\\\"editing && section._id === selectedSection\\\">\\n        {{section.name}} {{section.seats}}\\n        <button (click)=\\\"edit(section._id)\\\"\\n                class=\\\"float-right btn btn-primary\\\">Edit\\n        </button>\\n        <button (click)=\\\"delete(section._id)\\\"\\n                class=\\\"float-right btn btn-danger\\\">Delete\\n        </button>\\n      </div>\\n      <div [hidden]=\\\"!(editing && section._id === selectedSection)\\\">\\n        <input [(ngModel)]=\\\"section.name\\\"\\n               placeholder=\\\"Section Name\\\"\\n               class=\\\"form-control\\\">\\n        <input [(ngModel)]=\\\"section.seats\\\"\\n               placeholder=\\\"Seats available\\\"\\n               class=\\\"form-control\\\">\\n        <button (click)=\\\"update(section._id)\\\"\\n                class=\\\"float-right btn btn-primary\\\">Update\\n        </button>\\n        <button (click)=\\\"delete(section._id)\\\"\\n                class=\\\"float-right btn btn-danger\\\">Delete\\n        </button>\\n      </div>\\n    </li>\\n  </ul>\\n  <a routerLink=\\\"/home\\\">Home</a>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {current} from 'codelyzer/util/syntaxKind';\n\n@Component({\n  selector: 'app-admin-section-list',\n  templateUrl: './admin-section-list.component.html',\n  styleUrls: ['./admin-section-list.component.css']\n})\nexport class AdminSectionListComponent implements OnInit {\n\n\n  constructor(private service: SectionServiceClient,\n              private userService: UserServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadSections(params['courseId']));\n  }\n\n  sectionName = '';\n  seats = '';\n  courseId = '';\n  sections = [];\n  loaded = false;\n  editing = false;\n  selectedSection;\n\n  loadSections(courseId) {\n    if (courseId !== undefined) {\n      this.loaded = true;\n    }\n    this.courseId = courseId;\n    this\n      .service\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n\n  createSection(sectionName, seats) {\n    this\n      .service\n      .createSection(this.courseId, sectionName, seats)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n\n  edit(sectionId) {\n    this.editing = true;\n    this.selectedSection = sectionId;\n  }\n\n  update(sectionId) {\n    let currentSection = null;\n    this.sections.filter(section => {\n      if (sectionId === section._id) {\n        currentSection = section;\n      }\n      return true;\n    });\n    this.service.updateSection(currentSection, sectionId)\n      .then(sections => this.sections = sections);\n    this.editing = false;\n  }\n\n  delete(sectionId) {\n    this.service.deleteSection(sectionId, this.courseId)\n      .then(response => this.sections = response);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {FormsModule} from '@angular/forms';\nimport {WhiteBoardComponent} from './white-board/white-board.component';\nimport {CourseGridComponent} from './course-grid/course-grid.component';\nimport {CourseServiceClient} from './services/course.service.client';\nimport {routing} from './app.routing';\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\nimport {ModuleListComponent} from './module-list/module-list.component';\nimport {ModuleServiceClient} from './services/module.service.client';\nimport {LessonTabsComponent} from './lesson-tabs/lesson-tabs.component';\nimport {LessonServiceClient} from './services/lesson.service.client';\nimport {WidgetListComponent} from './widget-list/widget-list.component';\nimport {WidgetServiceClient} from './services/widget.service.client';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {UserServiceClient} from './services/user.service.client';\nimport {SectionListComponent} from './section-list/section-list.component';\nimport {SectionServiceClient} from './services/section.service.client';\nimport {AdminPageComponent} from './admin-page/admin-page.component';\nimport {AdminSectionListComponent} from './admin-section-list/admin-section-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WhiteBoardComponent,\n    CourseGridComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    WidgetListComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    SectionListComponent,\n    AdminPageComponent,\n    AdminSectionListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    CourseServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    WidgetServiceClient,\n    UserServiceClient,\n    SectionServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Routes, RouterModule} from '@angular/router';\nimport {WhiteBoardComponent} from './white-board/white-board.component';\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {SectionListComponent} from './section-list/section-list.component';\nimport {AdminPageComponent} from './admin-page/admin-page.component';\n\n\nconst appRoutes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'home', component: WhiteBoardComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'profile', component: ProfileComponent},\n  {path: 'admin/course', component: AdminPageComponent},\n  {path: 'admin/course/:courseId/section', component: AdminPageComponent},\n  {path: 'course/:courseId', component: CourseViewerComponent},\n  {path: 'course/:courseId/section', component: SectionListComponent},\n  {path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent},\n  {path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent},\n  {path: '**', component: WhiteBoardComponent} // last\n];\nexport const routing = RouterModule.forRoot(appRoutes);\n","module.exports = \".card {\\n  margin-bottom: 15px;\\n}\\n\"","module.exports = \"<h2>Course Grid ({{courses.length}})</h2>\\n\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n        <p class=\\\"card-text\\\">Use course \\\"dont delete\\\" for demo purposes</p>\\n        <a routerLink=\\\"/course/{{course.id}}\\\"\\n           class=\\\"btn btn-primary\\\">View</a>\\n        <a routerLink=\\\"/course/{{course.id}}/section\\\"\\n           class=\\\"btn btn-primary\\\">Enroll</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient) {\n  }\n\n  courses: Course[] = [];\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>{{course.title}}</h2>\\n  <app-module-list></app-module-list>\\n  <a routerLink=\\\"/home\\\">Home</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {CourseServiceClient} from \"../services/course.service.client\";\nimport {Course} from \"../models/course.model.client\";\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\n  }\n\n  course: Course = new Course();\n  loadCourse(courseId) {\n    this.service.findCourseById(courseId)\n      .then(course => this.course = course);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let lesson of lessons\\\"\\n      class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\"\\n       [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n</ul>\\n\\n<app-widget-list></app-widget-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {LessonServiceClient} from \"../services/lesson.service.client\";\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  constructor(private service: LessonServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  lessons = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.loadLessons(this.moduleId);\n  }\n\n  loadLessons(moduleId) {\n    this.moduleId = moduleId;\n    console.log(moduleId);\n    this.service.findLessonsForModule(moduleId)\n      .then(lessons => this.lessons = lessons);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Login</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <a routerLink=\\\"/register\\\">Register</a>\\n    </div>\\n    <div class=\\\"container-fluid\\\">\\n      <a routerLink=\\\"/home\\\">Home</a>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Route, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) {\n  }\n\n  username;\n  password;\n\n  login(username, password) {\n    console.log([username, password]);\n    this.service\n      .login(username, password)\n      .then((response) => {\n        if (response.status === 404) {\n          alert('Username and password are not valid.');\n        } else {\n          this.router.navigate(['profile']);\n        }\n      });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class Course {\n  id: number;\n  title: string;\n}\n","module.exports = \".active.wbdv {\\n  background-color: red;\\n  border-color: red;\\n}\\n\\n.active.wbdv a {\\n  color: white;\\n}\\n\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">Modules</li>\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\n          class=\\\"list-group-item wbdv\\\">\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\n          {{module.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ModuleServiceClient} from \"../services/module.service.client\";\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private service: ModuleServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  modules = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.loadModules(this.courseId);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"lastName\\\"\\n         placeholder=\\\"last name\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"phone\\\"\\n         placeholder=\\\"phone number\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"address\\\"\\n         placeholder=\\\"address\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n\\n  <h2>Sections ({{sections.length}})</h2>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let enrollment of sections\\\"\\n        class=\\\"list-group-item\\\">\\n      <a routerLink=\\\"/course/{{enrollment.section.courseId}}/section\\\">\\n        {{enrollment.section.name}}\\n        ({{enrollment.section.seats}})</a>\\n      <button (click)=\\\"unenroll(enrollment)\\\"\\n              class=\\\"float-right btn btn-danger\\\">Drop\\n      </button>\\n    </li>\\n  </ul>\\n\\n  <a (click)=\\\"logout()\\\">Logout | </a>\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  <a [hidden]=\\\"!admin\\\" routerLink=\\\"/admin/course\\\"> | Admin page</a>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {User} from '../models/user.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private router: Router) {\n  }\n\n  user = {};\n  username;\n  password;\n  firstName;\n  lastName;\n  userId;\n  phone;\n  email;\n  address;\n  sections = [];\n  admin;\n\n  update() {\n    const user = {\n      username: this.username,\n      password: this.password,\n      firstName: this.firstName,\n      lastName: this.lastName,\n      phone: this.phone,\n      email: this.email,\n      address: this.address,\n    };\n    this.service.updateUser(user, this.userId)\n      .then(() => alert('Profile successfully updated.'));\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n  }\n\n  unenroll(section) {\n    this.sectionService\n      .unenrollStudentInSection(section._id)\n      .then(sections => {\n        this.sections = sections;\n      });\n  }\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user => {\n        this.username = user.username;\n        this.password = user.password;\n        this.firstName = user.firstName;\n        this.lastName = user.lastName;\n        this.phone = user.phone;\n        this.email = user.email;\n        this.address = user.address;\n        this.userId = user._id;\n        this.admin = user.username === 'admin';\n      });\n\n    this.sectionService\n      .findSectionsForStudent()\n      .then(sections => this.sections = sections);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Register</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password2\\\"\\n         placeholder=\\\"verify password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"register(username, password, password2)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <a routerLink=\\\"/login\\\">Login</a>\\n    </div>\\n    <div class=\\\"container-fluid\\\">\\n      <a routerLink=\\\"/home\\\">Home</a>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) {\n  }\n\n  username;\n  password;\n  password2;\n\n  register(username, password, password2) {\n    if (password === password2) {\n      this.service\n        .createUser(username, password)\n        .then((response) => {\n          if (response.status !== 404) {\n            this.router.navigate(['profile']);\n          } else {\n            alert('That username is already taken.');\n          }\n        });\n    } else {\n      alert('Your passwords do not match.');\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Sections for course: {{courseId}}</h1>\\n  <div [hidden]=\\\"!admin\\\">\\n    <input [(ngModel)]=\\\"sectionName\\\"\\n           placeholder=\\\"Section Name\\\"\\n           class=\\\"form-control\\\">\\n    <input [(ngModel)]=\\\"seats\\\"\\n           placeholder=\\\"Seats available\\\"\\n           class=\\\"form-control\\\">\\n    <button (click)=\\\"createSection(sectionName, seats)\\\" class=\\\"btn btn-success btn-block\\\">\\n      Add Section\\n    </button>\\n  </div>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      {{section.name}} {{section.seats}}\\n      <button (click)=\\\"enroll(section)\\\"\\n              class=\\\"float-right btn btn-success\\\">Enroll\\n      </button>\\n    </li>\\n  </ul>\\n  <a routerLink=\\\"/home\\\">Home</a>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private service: SectionServiceClient,\n              private userService: UserServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadSections(params['courseId']));\n  }\n\n  sectionName = '';\n  seats = '';\n  courseId = '';\n  sections = [];\n  loggedIn;\n  admin;\n\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this\n      .service\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n\n  createSection(sectionName, seats) {\n    this\n      .service\n      .createSection(this.courseId, sectionName, seats)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n\n  enroll(section) {\n    if (this.admin) {\n      alert('You cannot enroll in a course as an admin.');\n    } else if (this.loggedIn) {\n      this.service\n        .enrollStudentInSection(section._id)\n        .then((response) => {\n          if (response.status === 403) {\n            alert('This section is full.');\n          }\n          if (response.status === 404) {\n            alert('Cannot enroll in same section twice');\n          }\n          if (response.status === 200) {\n            this.router.navigate(['profile']);\n          }\n        });\n    } else {\n      alert('You must be logged in to enroll. Go back to home and log in.');\n    }\n  }\n\n  ngOnInit() {\n    this.userService.checkIfLoggedIn()\n      .then(response => {\n        this.loggedIn = response.status !== 404;\n      })\n      .then(() => {\n        if (this.loggedIn) {\n          this.userService.profile()\n            .then(user => {\n              this.admin = user.username === 'admin';\n            });\n        }\n      });\n  }\n\n}\n","export class CourseServiceClient {\n  COURSE_URL = 'https://cs4550-springboot.herokuapp.com/api/course';\n\n  findAllCourses() {\n    return fetch(this.COURSE_URL)\n      .then(response => response.json());\n  }\n  findCourseById(courseId) {\n    return fetch(this.COURSE_URL + '/' + courseId)\n      .then(response => response.json());\n  }\n}\n","export class LessonServiceClient {\n\n  LESSON_URL = 'https://cs4550-springboot.herokuapp.com/api/course/COURSE_ID/module/MODULEID/lesson';\n\n  findLessonsForModule(moduleId) {\n    return fetch(this.LESSON_URL.replace('MODULEID', moduleId))\n      .then(response => response.json());\n  }\n}\n","export class ModuleServiceClient {\n  MODULE_URL = 'https://cs4550-springboot.herokuapp.com/api/course/COURSE_ID/module';\n  findModulesForCourse(courseId) {\n    return fetch(this.MODULE_URL.replace('COURSE_ID', courseId))\n      .then(response => response.json());\n  }\n}\n","export class SectionServiceClient {\n\n  SECTION_URL = 'https://cs4550-node.herokuapp.com/api/course/COURSEID/section';\n  STUDENT_SECTION_URL = 'https://cs4550-node.herokuapp.com/api/student/SECTION_ID/section';\n  SPECIFIC_SECTION_URL = 'https://cs4550-node.herokuapp.com/api/section/SECTION_ID';\n\n  deleteSection(sectionId, courseId) {\n    return fetch(this.SPECIFIC_SECTION_URL.replace('SECTION_ID', sectionId), {\n      method: 'delete',\n      credentials: 'include'\n    }).then(() => this.findSectionsForCourse(courseId));\n  }\n\n\n  findSectionsForStudent() {\n    return fetch(this.STUDENT_SECTION_URL.replace('/SECTION_ID', ''), {\n      credentials: 'include'\n    })\n      .then(response => response.json());\n  }\n\n  enrollStudentInSection(sectionId) {\n    return fetch(this.STUDENT_SECTION_URL.replace('SECTION_ID', sectionId), {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n\n  unenrollStudentInSection(sectionId) {\n    return fetch(this.STUDENT_SECTION_URL.replace('SECTION_ID', sectionId), {\n      method: 'delete',\n      credentials: 'include'\n    }).then(() =>\n      this.findSectionsForStudent());\n  }\n\n  findSectionsForCourse(courseId) {\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId))\n      .then(response => response.json());\n  }\n\n  createSection(courseId, name, seats) {\n    const section = {courseId, name, seats};\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId), {\n      method: 'post',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  updateSection(section, sectionId) {\n    return fetch(this.SPECIFIC_SECTION_URL.replace('SECTION_ID', sectionId), {\n      method: 'put',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json());\n  }\n}\n","export class UserServiceClient {\n\n  USER_LOGIN_URL = 'https://cs4550-node.herokuapp.com/api/login';\n  USER_LOGOUT_URL = 'https://cs4550-node.herokuapp.com/api/logout';\n  USER_PROFILE_URL = 'https://cs4550-node.herokuapp.com/api/profile';\n  USER_REGISTER_URL = 'https://cs4550-node.herokuapp.com/api/register';\n  USER_URL = 'https://cs4550-node.herokuapp.com/api/user/USER_ID';\n\n  findUserById(userId) {\n    return fetch(this.USER_URL.replace('USER_ID', userId))\n      .then(response => response.json());\n  }\n\n  delete() {\n    return fetch(this.USER_PROFILE_URL, {\n      credentials: 'include',\n      method: 'delete'\n    });\n  }\n\n  checkIfLoggedIn() {\n    return fetch(this.USER_LOGIN_URL + '/active', {\n      credentials: 'include'\n    });\n  }\n\n  updateUser(user, userId) {\n    return fetch(this.USER_PROFILE_URL, {\n      credentials: 'include',\n      body: JSON.stringify(user),\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json());\n  }\n\n  login(username, password) {\n    const credentials = {\n      username: username,\n      password: password\n    };\n    return fetch(this.USER_LOGIN_URL, {\n      method: 'post',\n      body: JSON.stringify(credentials),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  logout() {\n    return fetch(this.USER_LOGOUT_URL, {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n\n  profile() {\n    return fetch(this.USER_PROFILE_URL,\n      {\n        credentials: 'include', // include, same-origin, *omit\n      })\n      .then(response => response.json());\n  }\n\n  createUser(username, password) {\n    const user = {\n      username: username,\n      password: password\n    };\n    return fetch(this.USER_REGISTER_URL, {\n      body: JSON.stringify(user),\n      credentials: 'include', // include, same-origin, *omit\n      method: 'post',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n}\n","export class WidgetServiceClient {\n  WIDGET_URL = 'https://cs4550-springboot.herokuapp.com/api/lesson/LESSON_ID/widget';\n\n  findWidgetsForLesson(lessonId) {\n    return fetch(this.WIDGET_URL.replace('LESSON_ID', lessonId))\n      .then(response => response.json());\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>\\n    White Board\\n  </h1>\\n\\n  <div [hidden]=\\\"loggedIn\\\" class=\\\"row\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <a routerLink=\\\"/login\\\">Login</a>\\n    </div>\\n    <div class=\\\"container-fluid\\\">\\n      <a routerLink=\\\"/register\\\">Register</a>\\n    </div>\\n  </div>\\n  <div [hidden]=\\\"!loggedIn\\\">\\n    <a routerLink=\\\"/profile\\\">Profile</a>\\n  </div>\\n\\n  <h2>Currently enrolled sections: ({{sections.length}})</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item\\\">\\n      {{enrollment.section.name}}\\n      ({{enrollment.section.seats}})\\n    </li>\\n  </ul>\\n\\n  <app-course-grid></app-course-grid>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {SectionServiceClient} from '../services/section.service.client';\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  loggedIn;\n  sections = [];\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient) {\n  }\n\n  ngOnInit() {\n    this.service.checkIfLoggedIn()\n      .then(response => {\n        this.loggedIn = response.status !== 404;\n      });\n\n    this.sectionService\n      .findSectionsForStudent()\n      .then(sections => this.sections = sections);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let widget of widgets\\\">\\n  <div [ngSwitch]=\\\"widget.widgetType\\\">\\n    <div *ngSwitchCase=\\\"'Heading'\\\">\\n      <div [ngSwitch]=\\\"widget.size\\\">\\n        <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.text}}</h1>\\n        <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.text}}</h2>\\n        <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.text}}</h3>\\n        <h4 *ngSwitchCase=\\\"'4'\\\">{{widget.text}}</h4>\\n        <h5 *ngSwitchCase=\\\"'5'\\\">{{widget.text}}</h5>\\n        <h6 *ngSwitchCase=\\\"'6'\\\">{{widget.text}}</h6>\\n      </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Link'\\\">\\n      <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\n    </div>\\n    <div *ngSwitchCase=\\\"'List'\\\">\\n      <h1>ListWidget</h1>\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\"\\n            *ngFor=\\\"let item of widget.text.split('\\\\n')\\\">\\n          {{item}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Exam'\\\">\\n      <h1>Exam Widget</h1>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {WidgetServiceClient} from '../services/widget.service.client';\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setContext(params));\n  }\n\n  context;\n  widgets = [];\n\n  setContext(params) {\n    this.context = params;\n    this.loadWidgets(params.lessonId);\n  }\n\n  loadWidgets(lessonId) {\n    this.service.findWidgetsForLesson(lessonId)\n      .then(widgets => this.widgets = widgets);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}